package com.base.class_03;

/**
 * https://blog.csdn.net/computer_user/article/details/86836681
 * 
 * ​ 三个子问题，具体如下。
​ * 问题一：如何判断一个链表是否有环，如果有，返回第一个进入环的节点，没有则返回null。
​ * 问题二：如何判断两个无环链表是否相交，相交则返回第一个相交节点，不相交则返回null。
​ * 问题三：如何判断两个有环链表是否相交，相交则返回第一个相交节点，不相交返回null。
 *
 * 思路最终要
 * 1.判断有环没环，一个1步走，一个2步走，能相等即有环
 * 2.返回入环节点，玄学，走1步的和走2步的 第一次相遇，走两步的回到起点以1步走再次相遇一定的入环点
 * 3.无环相交，假设A和B链表，统计出A B的长度，假设A更长，让A先走 A - B步，然后一起走，遇到的就是第一个相交点
 * 4.有环相交有3种拓扑结构，上述各自得到loop1 loop2，判断loop1 == loop2 ,然后
 *      4.1 两个节点的项链  遍历loop1  找到 == loop2 ，则返回loop1
 *      4.2 一个节点的项链  解法和 无环是一样的
 *      4.3 不相交         遍历loop1 无法找到 == loop2 ，则返回loop1
 * @author yucang
 *
 */
public class C15_CirCleList {
    
}
